class Solution:
    def longestConsecutive(self, nums: List[int]) -> int:
        numSet = set(nums)
        longest = 0

        for num in numSet:
            #check if current num has left neighbor, if not, it's the start of a sequence
            if (num - 1) not in numSet:
                length = 0
                #checks if num is in set, num + 1 in set?, num + 2 in set? ... 
                while (num + length) in numSet:
                    length += 1
                longest = max(length, longest)
        return longest

#time / space complexity = O(n)
#hashset 
